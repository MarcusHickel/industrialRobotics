
InitialiseEnvironment;

[qMatrixCR10{1}, cubeSatTransMatrix, toolCentrePointMatrix{1}] = FunCatchCubeSat(robotCR10);

[qMatrixCR10{2}, toolCentrePointMatrix{2}] = FunMoveToOperationSpace(robotCR10,qMatrixCR10(end,:));
qMatrixUR3 = FunOperateOnSatellite;


for i = 1:size(qMatrixCR10,1)
     
      robotCR10.model.animate(qMatrixCR10(i,:));

      if x(i) > max(x) || i > 25 % Halfway is peak velo of TCP
         cubeSat.model.base = toolCentrePointMatrix(i); % Caught by arm
      else
         cubeSat.model.base = cubeSatTransMatrix(i);  % Flying towards
      end

    cubeSat.model.animate(0);
    pause(0.01);

end
for i = 1:size(qMatrixCR10,1)
     
    robotCR10.model.animate(qMatrixCR10(i,:));


    cubeSat.model.base = toolCentrePointMatrix(i);
    cubeSat.model.animate(0);

    pause(0.01);

end
j = 1;
%Animate
tic;
for i = 1:size(qMatrixCR10,1)
    if rem(i,50) == 0

        text = sprintf('Waypoint %d (%d) %0.2fs', j, i, toc);
        disp(text)
        j = j+1;
    end
    robotUR3.model.animate(qMatrixCR10(i,:));

    pause(.01);

end